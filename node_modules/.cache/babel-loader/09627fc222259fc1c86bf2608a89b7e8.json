{"ast":null,"code":"import _defineProperty from \"/home/carolina/Churrasco/churrasco/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/carolina/Churrasco/churrasco/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/carolina/Churrasco/churrasco/src/components/Form.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Form, Input, Button, DatePicker, TimePicker } from 'antd'; //Definición de los atributos del formulario\n\nconst CustomForm = props => {\n  const addReserve = props.addReserve;\n  const getFieldDecorator = props.form.getFieldDecorator;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setDate = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        startTime = _useState4[0],\n        setStartTime = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        endTime = _useState6[0],\n        setEndTime = _useState6[1]; //Funcionalidad\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        const reserve = _objectSpread({}, values, {\n          date,\n          startTime,\n          endTime\n        });\n\n        console.log('Received values of form: ', reserve);\n        addReserve(reserve);\n        props.form.resetFields();\n        setDate(null);\n        setStartTime(null);\n        setEndTime(null); // limpiar todos los campos del formulario\n      }\n    });\n  };\n\n  const onDateChange = (date, dateString) => {\n    console.log(date, dateString);\n    setDate(date);\n  };\n\n  const onStartTimeChange = (time, timeString) => {\n    console.log(time, timeString);\n    setStartTime(timeString);\n  };\n\n  const onEndTimeChange = (time, timeString) => {\n    console.log(time, timeString);\n    setEndTime(timeString);\n  };\n\n  const format = 'HH:mm';\n  return React.createElement(Form, {\n    layout: \"inline\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: '¡Por favor, ingrese su nombre!'\n    }]\n  })(React.createElement(Input, {\n    placeholder: \"Nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    onChange: onDateChange,\n    value: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TimePicker, {\n    onChange: onStartTimeChange,\n    format: format,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TimePicker, {\n    onChange: onEndTimeChange,\n    format: format,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Guardar\")));\n};\n\nexport default Form.create({\n  name: 'reservation_form'\n})(CustomForm);","map":{"version":3,"sources":["/home/carolina/Churrasco/churrasco/src/components/Form.jsx"],"names":["React","useState","Form","Input","Button","DatePicker","TimePicker","CustomForm","props","addReserve","getFieldDecorator","form","date","setDate","startTime","setStartTime","endTime","setEndTime","handleSubmit","event","preventDefault","validateFields","err","values","reserve","console","log","resetFields","onDateChange","dateString","onStartTimeChange","time","timeString","onEndTimeChange","format","rules","required","message","create","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, DatePicker, TimePicker } from 'antd';\n\n\n//Definición de los atributos del formulario\nconst CustomForm = (props) => {\n    const {addReserve} = props;\n    const { getFieldDecorator } = props.form;\n    const  [date, setDate] = useState(null);\n    const [startTime, setStartTime] = useState(null);\n    const [endTime, setEndTime] = useState(null);\n    \n//Funcionalidad\n    const handleSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields((err, values) => {\n          if (!err) {\n              const reserve = {...values, date, startTime, endTime};\n                console.log('Received values of form: ', reserve);\n                addReserve(reserve);\n                props.form.resetFields();\n                setDate(null);\n                setStartTime(null);\n                setEndTime(null);\n                // limpiar todos los campos del formulario\n\n          }\n        });\n      };\n\nconst onDateChange = (date, dateString) => {\n    console.log(date, dateString);\n    setDate(date);\n};\n\nconst onStartTimeChange = (time, timeString) => {\n    console.log(time, timeString)\n    setStartTime(timeString);\n};\n\nconst onEndTimeChange = (time, timeString) => {\n    console.log(time, timeString)\n    setEndTime(timeString);\n};\n\nconst format = 'HH:mm';\n\n    return (\n        <Form layout=\"inline\" onSubmit={handleSubmit}>\n            \n            <Form.Item>\n                {getFieldDecorator('name', {\n                rules: [{ required: true, message: '¡Por favor, ingrese su nombre!' }],\n                })\n                ( <Input placeholder='Nombre'/> )}\n            </Form.Item>\n\n            <Form.Item>\n                <DatePicker onChange={onDateChange} value={date}/>\n            </Form.Item>\n            \n            <Form.Item>\n                <TimePicker onChange={onStartTimeChange} format={format}/>\n            </Form.Item>\n\n            <Form.Item>\n                <TimePicker onChange={onEndTimeChange} format={format}/>\n            </Form.Item>\n            \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                Guardar\n                </Button>\n            </Form.Item>\n        \n        </Form>\n    );\n};\n\n\nexport default Form.create({ name: 'reservation_form' })(CustomForm)"]},"metadata":{},"sourceType":"module"}