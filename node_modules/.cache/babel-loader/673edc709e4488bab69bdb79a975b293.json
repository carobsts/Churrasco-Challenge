{"ast":null,"code":"var _jsxFileName = \"/home/carolina/Churrasco/churrasco/src/components/Form.jsx\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, DatePicker, TimePicker } from 'antd';\nimport moment from 'moment';\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nconst CustomForm = props => {\n  const _props$form = props.form,\n        getFieldDecorator = _props$form.getFieldDecorator,\n        getFieldsError = _props$form.getFieldsError,\n        getFieldError = _props$form.getFieldError,\n        isFieldTouched = _props$form.isFieldTouched;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  const onDateChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n\n  const onStartTimeChange = (time, timeString) => {\n    console.log(time, timeString);\n  };\n\n  const onEndTimeChange = (time, timeString) => {\n    console.log(time, timeString);\n  };\n\n  const format = 'HH:mm';\n  return React.createElement(Form, {\n    layout: \"inline\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: '¡Por favor, ingrese su nombre.'\n    }]\n  })(React.createElement(Input, {\n    placeholder: \"Nombre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    onChange: onDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(TimePicker, {\n    onChange: onStartTimeChange,\n    format: format,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(TimePicker, {\n    onChange: onEndTimeChange,\n    format: format,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Guardar\")));\n};\n\nexport default Form.create({\n  name: 'reservation_form'\n})(CustomForm);","map":{"version":3,"sources":["/home/carolina/Churrasco/churrasco/src/components/Form.jsx"],"names":["React","Form","Icon","Input","Button","DatePicker","TimePicker","moment","hasErrors","fieldsError","Object","keys","some","field","CustomForm","props","form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","handleSubmit","e","preventDefault","validateFields","err","values","console","log","onDateChange","date","dateString","onStartTimeChange","time","timeString","onEndTimeChange","format","rules","required","message","create","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Icon, Input, Button, DatePicker, TimePicker } from 'antd';\nimport moment from 'moment';\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n  }\n\nconst CustomForm = (props) => {\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = props.form;\n    \nconst handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n          }\n        });\n      };\n\nconst onDateChange = (date, dateString) => {\n    console.log(date, dateString);\n};\n\nconst onStartTimeChange = (time, timeString) => {\n    console.log(time, timeString)\n};\n\nconst onEndTimeChange = (time, timeString) => {\n    console.log(time, timeString)\n};\n\nconst format = 'HH:mm';\n\n    return (\n        <Form layout=\"inline\" onSubmit={handleSubmit}>\n            \n            <Form.Item>\n                {getFieldDecorator('name', {\n                rules: [{ required: true, message: '¡Por favor, ingrese su nombre.' }],\n                })\n                ( <Input placeholder='Nombre'/> )}\n            </Form.Item>\n\n            <Form.Item>\n                <DatePicker onChange={onDateChange}/>\n            </Form.Item>\n            \n            <Form.Item>\n                <TimePicker onChange={onStartTimeChange} format={format}/>\n            </Form.Item>\n\n            <Form.Item>\n                <TimePicker onChange={onEndTimeChange} format={format}/>\n            </Form.Item>\n            \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                Guardar\n                </Button>\n            </Form.Item>\n        \n        </Form>\n    );\n};\n\n\nexport default Form.create({ name: 'reservation_form' })(CustomForm)"]},"metadata":{},"sourceType":"module"}