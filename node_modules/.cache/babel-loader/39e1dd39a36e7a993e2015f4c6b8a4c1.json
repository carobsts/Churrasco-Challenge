{"ast":null,"code":"var _jsxFileName = \"/home/carolina/Churrasco/churrasco/challenge-churrasco/src/components/Timeline.jsx\";\nimport React from 'react';\nimport Timeline from 'react-visjs-timeline';\nimport moment from 'moment';\nconst options = {\n  orientation: {\n    axis: \"top\",\n    item: \"top\"\n  },\n  zoomMax: 87600900,\n  zoomMin: 10000000\n};\n\nconst CustomTimeline = props => {\n  const data = props.data;\n  return React.createElement(React.Fragment, null, React.createElement(Timeline, {\n    options: options,\n    items: data.map(item => {\n      return {\n        content: item.name,\n        start: moment(item.date + ' ' + item.startTime, 'YYYY-MM-DD HH:mm'),\n        end: moment(item.date + ' ' + item.endTime, 'YYYY-MM-DD HH:mm')\n      };\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nvar container = document.getElementById(\"visualization\");\n\nfunction move(percentage) {\n  var range = CustomTimeline.getWindow();\n  var interval = range.end - range.start;\n  CustomTimeline.setWindow({\n    start: range.start.valueOf() - interval * percentage,\n    end: range.end.valueOf() - interval * percentage\n  });\n}\n\ndocument.getElementById(\"moveLeft\").onclick = function () {\n  move(0.2);\n};\n\ndocument.getElementById(\"moveRight\").onclick = function () {\n  move(-0.2);\n};\n\nexport default CustomTimeline;","map":{"version":3,"sources":["/home/carolina/Churrasco/churrasco/challenge-churrasco/src/components/Timeline.jsx"],"names":["React","Timeline","moment","options","orientation","axis","item","zoomMax","zoomMin","CustomTimeline","props","data","map","content","name","start","date","startTime","end","endTime","container","document","getElementById","move","percentage","range","getWindow","interval","setWindow","valueOf","onclick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,KADK;AAEXC,IAAAA,IAAI,EAAE;AAFK,GADD;AAKZC,EAAAA,OAAO,EAAE,QALG;AAMZC,EAAAA,OAAO,EAAE;AANG,CAAhB;;AASA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA,QACvBC,IADuB,GACfD,KADe,CACvBC,IADuB;AAG9B,SACA,0CACI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAER,OAAnB;AAA4B,IAAA,KAAK,EAAEQ,IAAI,CAACC,GAAL,CAAUN,IAAD,IAAU;AAClD,aAAO;AACHO,QAAAA,OAAO,EAAEP,IAAI,CAACQ,IADX;AAEHC,QAAAA,KAAK,EAAEb,MAAM,CAACI,IAAI,CAACU,IAAL,GAAY,GAAZ,GAAkBV,IAAI,CAACW,SAAxB,EAAmC,kBAAnC,CAFV;AAGHC,QAAAA,GAAG,EAAEhB,MAAM,CAACI,IAAI,CAACU,IAAL,GAAY,GAAZ,GAAkBV,IAAI,CAACa,OAAxB,EAAiC,kBAAjC;AAHR,OAAP;AAKH,KANkC,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAYH,CAfD;;AAiBA,IAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAhB;;AAEA,SAASC,IAAT,CAAcC,UAAd,EAA0B;AACtB,MAAIC,KAAK,GAAGhB,cAAc,CAACiB,SAAf,EAAZ;AACA,MAAIC,QAAQ,GAAGF,KAAK,CAACP,GAAN,GAAYO,KAAK,CAACV,KAAjC;AACAN,EAAAA,cAAc,CAACmB,SAAf,CAAyB;AACvBb,IAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYc,OAAZ,KAAwBF,QAAQ,GAAGH,UADnB;AAEvBN,IAAAA,GAAG,EAAEO,KAAK,CAACP,GAAN,CAAUW,OAAV,KAAsBF,QAAQ,GAAGH;AAFf,GAAzB;AAID;;AAEHH,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCQ,OAApC,GAA8C,YAAW;AACrDP,EAAAA,IAAI,CAAC,GAAD,CAAJ;AACH,CAFD;;AAGAF,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCQ,OAArC,GAA+C,YAAW;AACtDP,EAAAA,IAAI,CAAC,CAAC,GAAF,CAAJ;AACH,CAFD;;AAIA,eAAed,cAAf","sourcesContent":["import React from 'react';\nimport Timeline from 'react-visjs-timeline';\nimport moment from 'moment';\n\nconst options = {\n    orientation: {\n      axis: \"top\",\n      item: \"top\"\n    },\n    zoomMax: 87600900, \n    zoomMin: 10000000\n    };\n\nconst CustomTimeline = (props) => {\n    const {data} = props;\n    \n    return (\n    <>\n        <Timeline options={options} items={data.map((item) => {\n            return {\n                content: item.name,\n                start: moment(item.date + ' ' + item.startTime, 'YYYY-MM-DD HH:mm'),\n                end: moment(item.date + ' ' + item.endTime, 'YYYY-MM-DD HH:mm')\n            }\n        })}/>\n    \n    </>\n    )\n};\n\nvar container = document.getElementById(\"visualization\");\n\nfunction move(percentage) {\n    var range = CustomTimeline.getWindow();\n    var interval = range.end - range.start;\n    CustomTimeline.setWindow({\n      start: range.start.valueOf() - interval * percentage,\n      end: range.end.valueOf() - interval * percentage\n    });\n  }\n\ndocument.getElementById(\"moveLeft\").onclick = function() {\n    move(0.2);\n};\ndocument.getElementById(\"moveRight\").onclick = function() {\n    move(-0.2);\n};\n\nexport default CustomTimeline;"]},"metadata":{},"sourceType":"module"}