{"ast":null,"code":"var _jsxFileName = \"/home/carolina/Churrasco/churrasco/challenge-churrasco/src/components/Timeline.jsx\";\nimport React from 'react';\nimport Timeline from 'react-visjs-timeline';\nimport moment from 'moment';\nconst options = {\n  orientation: {\n    axis: \"top\",\n    item: \"top\"\n  },\n  zoomMax: 87600900,\n  zoomMin: 10000000\n};\n\nconst CustomTimeline = props => {\n  const data = props.data;\n\n  const MoveTimeline = percentage => {\n    const range = timeline.getWindow();\n    const interval = range.end - range.start;\n    timeline.setWindow({\n      start: range.start.valueOf() - interval * percentage,\n      end: range.end.valueOf() - interval * percentage\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Timeline, {\n    options: options,\n    items: data.map(item => {\n      return {\n        content: item.name,\n        start: moment(item.date + ' ' + item.startTime, 'YYYY-MM-DD HH:mm'),\n        end: moment(item.date + ' ' + item.endTime, 'YYYY-MM-DD HH:mm')\n      };\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default CustomTimeline;","map":{"version":3,"sources":["/home/carolina/Churrasco/churrasco/challenge-churrasco/src/components/Timeline.jsx"],"names":["React","Timeline","moment","options","orientation","axis","item","zoomMax","zoomMin","CustomTimeline","props","data","MoveTimeline","percentage","range","timeline","getWindow","interval","end","start","setWindow","valueOf","map","content","name","date","startTime","endTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,KADK;AAEXC,IAAAA,IAAI,EAAE;AAFK,GADD;AAKZC,EAAAA,OAAO,EAAE,QALG;AAMZC,EAAAA,OAAO,EAAE;AANG,CAAhB;;AASA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA,QACvBC,IADuB,GACfD,KADe,CACvBC,IADuB;;AAGlC,QAAMC,YAAY,GAAIC,UAAD,IAAgB;AACjC,UAAMC,KAAK,GAAGC,QAAQ,CAACC,SAAT,EAAd;AACA,UAAMC,QAAQ,GAAGH,KAAK,CAACI,GAAN,GAAYJ,KAAK,CAACK,KAAnC;AACAJ,IAAAA,QAAQ,CAACK,SAAT,CAAmB;AACfD,MAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYE,OAAZ,KAAwBJ,QAAQ,GAAGJ,UAD3B;AAEfK,MAAAA,GAAG,EAAEJ,KAAK,CAACI,GAAN,CAAUG,OAAV,KAAsBJ,QAAQ,GAAGJ;AAFvB,KAAnB;AAIH,GAPD;;AASI,SACA,0CACI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEV,OAAnB;AAA4B,IAAA,KAAK,EAAEQ,IAAI,CAACW,GAAL,CAAUhB,IAAD,IAAU;AAClD,aAAO;AACHiB,QAAAA,OAAO,EAAEjB,IAAI,CAACkB,IADX;AAEHL,QAAAA,KAAK,EAAEjB,MAAM,CAACI,IAAI,CAACmB,IAAL,GAAY,GAAZ,GAAkBnB,IAAI,CAACoB,SAAxB,EAAmC,kBAAnC,CAFV;AAGHR,QAAAA,GAAG,EAAEhB,MAAM,CAACI,IAAI,CAACmB,IAAL,GAAY,GAAZ,GAAkBnB,IAAI,CAACqB,OAAxB,EAAiC,kBAAjC;AAHR,OAAP;AAKH,KANkC,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAWH,CAvBD;;AAyBA,eAAelB,cAAf","sourcesContent":["import React from 'react';\nimport Timeline from 'react-visjs-timeline';\nimport moment from 'moment';\n\nconst options = {\n    orientation: {\n      axis: \"top\",\n      item: \"top\"\n    },\n    zoomMax: 87600900, \n    zoomMin: 10000000\n    };\n\nconst CustomTimeline = (props) => {\n    const {data} = props;\n    \nconst MoveTimeline = (percentage) => {\n    const range = timeline.getWindow();\n    const interval = range.end - range.start;\n    timeline.setWindow({\n        start: range.start.valueOf() - interval * percentage,\n        end: range.end.valueOf() - interval * percentage\n    });\n};\n\n    return (\n    <>\n        <Timeline options={options} items={data.map((item) => {\n            return {\n                content: item.name,\n                start: moment(item.date + ' ' + item.startTime, 'YYYY-MM-DD HH:mm'),\n                end: moment(item.date + ' ' + item.endTime, 'YYYY-MM-DD HH:mm')\n            }\n        })}/>\n    </>\n    )\n};\n\nexport default CustomTimeline;"]},"metadata":{},"sourceType":"module"}