{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nrequire('vis-timeline/dist/vis-timeline-graph2d.min.css');\n\nvar _visTimelineGraph2d = require('vis-timeline/dist/vis-timeline-graph2d.min');\n\nvar _visTimelineGraph2d2 = _interopRequireDefault(_visTimelineGraph2d);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _difference = require('lodash/difference');\n\nvar _difference2 = _interopRequireDefault(_difference);\n\nvar _intersection = require('lodash/intersection');\n\nvar _intersection2 = _interopRequireDefault(_intersection);\n\nvar _each = require('lodash/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nvar _assign = require('lodash/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _omit = require('lodash/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _keys = require('lodash/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar noop = function noop() {};\n\nvar events = ['currentTimeTick', 'click', 'contextmenu', 'doubleClick', 'groupDragged', 'changed', 'rangechange', 'rangechanged', 'select', 'timechange', 'timechanged', 'mouseOver', 'mouseMove', 'itemover', 'itemout'];\nvar eventPropTypes = {};\nvar eventDefaultProps = {};\n(0, _each2.default)(events, function (event) {\n  ;\n  eventPropTypes[event] = _propTypes2.default.func, eventDefaultProps[event + 'Handler'] = noop;\n});\n\nvar Timeline = function (_Component) {\n  _inherits(Timeline, _Component);\n\n  function Timeline(props) {\n    _classCallCheck(this, Timeline);\n\n    var _this = _possibleConstructorReturn(this, (Timeline.__proto__ || Object.getPrototypeOf(Timeline)).call(this, props));\n\n    _this.state = {\n      customTimes: []\n    };\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.$el.destroy();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var container = this.refs.container;\n      this.$el = new _visTimelineGraph2d2.default.Timeline(container, undefined, this.props.options);\n      events.forEach(function (event) {\n        _this2.$el.on(event, _this2.props[event + 'Handler']);\n      });\n      this.init();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.init();\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      var _props = this.props,\n          items = _props.items,\n          groups = _props.groups,\n          options = _props.options,\n          selection = _props.selection,\n          customTimes = _props.customTimes;\n      var itemsChange = items !== nextProps.items;\n      var groupsChange = groups !== nextProps.groups;\n      var optionsChange = options !== nextProps.options;\n      var customTimesChange = customTimes !== nextProps.customTimes;\n      var selectionChange = selection !== nextProps.selection;\n      return itemsChange || groupsChange || optionsChange || customTimesChange || selectionChange;\n    }\n  }, {\n    key: 'init',\n    value: function init() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          items = _props2.items,\n          groups = _props2.groups,\n          options = _props2.options,\n          selection = _props2.selection,\n          _props2$selectionOpti = _props2.selectionOptions,\n          selectionOptions = _props2$selectionOpti === undefined ? {} : _props2$selectionOpti,\n          customTimes = _props2.customTimes,\n          _props2$animate = _props2.animate,\n          animate = _props2$animate === undefined ? true : _props2$animate,\n          currentTime = _props2.currentTime;\n      var timelineOptions = options;\n\n      if (animate) {\n        // If animate option is set, we should animate the timeline to any new\n        // start/end values instead of jumping straight to them\n        timelineOptions = (0, _omit2.default)(options, 'start', 'end');\n        this.$el.setWindow(options.start, options.end, {\n          animation: animate\n        });\n      }\n\n      this.$el.setOptions(timelineOptions);\n\n      if (groups.length > 0) {\n        var groupsDataset = new _visTimelineGraph2d2.default.DataSet();\n        groupsDataset.add(groups);\n        this.$el.setGroups(groupsDataset);\n      }\n\n      this.$el.setItems(items);\n      this.$el.setSelection(selection, selectionOptions);\n\n      if (currentTime) {\n        this.$el.setCurrentTime(currentTime);\n      } // diff the custom times to decipher new, removing, updating\n\n\n      var customTimeKeysPrev = (0, _keys2.default)(this.state.customTimes);\n      var customTimeKeysNew = (0, _keys2.default)(customTimes);\n      var customTimeKeysToAdd = (0, _difference2.default)(customTimeKeysNew, customTimeKeysPrev);\n      var customTimeKeysToRemove = (0, _difference2.default)(customTimeKeysPrev, customTimeKeysNew);\n      var customTimeKeysToUpdate = (0, _intersection2.default)(customTimeKeysPrev, customTimeKeysNew); // NOTE this has to be in arrow function so context of `this` is based on\n      // this.$el and not `each`\n\n      (0, _each2.default)(customTimeKeysToRemove, function (id) {\n        return _this3.$el.removeCustomTime(id);\n      });\n      (0, _each2.default)(customTimeKeysToAdd, function (id) {\n        var datetime = customTimes[id];\n\n        _this3.$el.addCustomTime(datetime, id);\n      });\n      (0, _each2.default)(customTimeKeysToUpdate, function (id) {\n        var datetime = customTimes[id];\n\n        _this3.$el.setCustomTime(datetime, id);\n      }); // store new customTimes in state for future diff\n\n      this.setState({\n        customTimes: customTimes\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', {\n        ref: 'container'\n      });\n    }\n  }]);\n\n  return Timeline;\n}(_react.Component);\n\nexports.default = Timeline;\nTimeline.propTypes = (0, _assign2.default)({\n  items: _propTypes2.default.array,\n  groups: _propTypes2.default.array,\n  options: _propTypes2.default.object,\n  selection: _propTypes2.default.array,\n  customTimes: _propTypes2.default.shape({\n    datetime: _propTypes2.default.instanceOf(Date),\n    id: _propTypes2.default.string\n  }),\n  animate: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.object]),\n  currentTime: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(Date), _propTypes2.default.number])\n}, eventPropTypes);\nTimeline.defaultProps = (0, _assign2.default)({\n  items: [],\n  groups: [],\n  options: {},\n  selection: [],\n  customTimes: {}\n}, eventDefaultProps);","map":null,"metadata":{},"sourceType":"script"}